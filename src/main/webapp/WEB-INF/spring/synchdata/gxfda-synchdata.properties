app.jdbc.driver=oracle.jdbc.OracleDriver
app.jdbc.url=jdbc:oracle:thin:@192.168.0.111:1521:ORCL
app.jdbc.username=gx_fda_app
app.jdbc.password=123456
app.jdbc.minidle=5
app.jdbc.maxidle=20
app.jdbc.maxactive=40

datablock=2000
app.entp.countsql=select count(*), min(entp_id), max(entp_id) from gx_fda_app.app_entp where entp_valid='1'
app.entp.datasql=select a.*, b.city_name,c.name handle_unit_name from gx_fda_app.app_entp a left join gx_fda_app.app_city_unit b on(a.city_id=b.city_id) left join  gx_fda_sys.sys_org c on(a.handle_unit_id=c.org_id) where a.entp_valid='1' and a.entp_id>=? and a.entp_id<=? order by a.entp_id
app.entp.addrsql=select * from gx_fda_app.app_entp_addr where entp_id=?
app.entp.bussql=select entp_type_name,bus_name from gx_fda_app.app_entp_business a left join gx_fda_app.app_prj_entp_type b on a.entp_type=b.entp_type where entp_id=?
app.entp.addrsql=select * from gx_fda_app.app_entp_addr where entp_id=?
app.entp.insertsql=insert into app_entp (entp_id,rm_entp_id, entp_name, entp_province, contact, contact_duty, cell_phone, contact_address, contact_postal_code, tel, register_address, register_fund, business_license, business_license_date, city_name, handle_unit_name,  longitude, latitude, fax, email, bus_name,input_date) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
app.entp.updatesql=update app_entp set entp_name=?, entp_province=?, contact=?, contact_duty=?, cell_phone=?, contact_address=?, contact_postal_code=?, tel=?, register_address=?, register_fund=?, business_license=?, business_license_date=?, city_name=?, handle_unit_name=?,  longitude=?, latitude=?, fax=?, email=?,bus_name=? where rm_entp_id=?
app.entp.licencesql=select item_licence_id rm_licence_id, entp_id rm_entp_id, b.entp_type_name,licence_no,from_date,to_date,licence_time from app_item_licence a, app_prj_entp_type b where licence_valid='1' and a.entp_id=? and a.entp_type=b.entp_type
app.entp.licenceinsertsql=insert into app_licence (licence_id, rm_licence_id, rm_entp_id, licence_no, from_date, to_date, licence_time, entp_type_name) values (?, ?, ?, ?, ?, ?, ?, ?)
sequencesql=select hibernate_sequence.nextval from dual
synchtasksql=update sys_synchdata_task set need_synch=?,finish_synch=?,begin_time=?,finish_time=?,status=?,memo=? where synchdata_task_id=@ID


voice.jdbc.driver=oracle.jdbc.OracleDriver
voice.jdbc.url=jdbc:oracle:thin:@127.0.0.1:5521:GXFDA
voice.jdbc.username=gx_fda_voice
voice.jdbc.password=nhy6mju7123
voice.jdbc.minidle=10
voice.jdbc.maxidle=20
voice.jdbc.maxactive=40

voice.info.countsql=select count(*), min(info_id), max(info_id) from gx_fda_voice.voice_info where voice_info_status in('1','2')
voice.info.datasql=select * from gx_fda_voice.voice_info where info_id>=? and info_id<=? and voice_info_status in('1','2') order by info_id
##voice.info.insertsql=insert into voice_info (info_id, rule_name, voice_info_is_home, voice_info_title, voice_info_source, voice_info_source_url, voice_info_author, voice_info_issue_time, voice_info_status, voice_info_discover_time, voice_info_discover_user, voice_info_nature, voice_info_is_local, meta_type, transmitconut, voice_info_is_sensitive, clickcount, rm_affix_id, rm_info_id, local_data, content_area, rule_id, unit_org_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
voice.info.insertsql=insert into voice_info (info_id, rule_name, voice_info_is_home, voice_info_title, voice_info_content, voice_info_source, voice_info_source_url, voice_info_author, voice_info_issue_time, voice_info_status, voice_info_discover_time, voice_info_discover_user, voice_info_nature, voice_info_is_local, meta_type, transmitconut, voice_info_is_sensitive, clickcount, rm_affix_id, rm_info_id, local_data, content_area, rule_id, unit_org_id) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
voice.info.affixsql=select * from voice_affix_item where affix_id=?
voice.info.affixinsertsql=insert into voice_info_attach (attach_id, true_name, file_size, is_image, save_path, rm_attach_id, rm_affix_id, local_data) values (?, ?, ?, ?, ?, ?, ?, ?)
voice.info.rulesql=select * from voice_rule where rule_id=?

####同步行政审批待办####
#源数据连接信息#
supervise.jdbc.driver=oracle.jdbc.OracleDriver
supervise.jdbc.url=jdbc:oracle:thin:@192.168.0.111:1521:ORCL
supervise.jdbc.username=gx_fda_app
supervise.jdbc.password=123456
supervise.jdbc.minidle=10
supervise.jdbc.maxidle=20
supervise.jdbc.maxactive=40
#通过接收人rmUserInfoId获取rmUserId#
target.user.findsql=select rm_user_id from sys_user where rm_user_info_id=?
#每次获取的待办数量#
#supervise.fetch.quantity=1000
#获取的时间间隔(单位：天)#
supervise.fetch.interval=-90
#获取同步总记录数sql#
supervise.fd.countsql=select count(*), max(pending_handle_id) from gx_fda_supervise.pending_handle where status not like '%网上申请填报%' and receiver_id is not null and pending_module like '%AppFlow%' and send_time >=to_date(?,'yyyy-mm-dd')
#获取需要同步的数据 !参数个数及位置要与插入的sql一致!#
supervise.fd.datasql=select pending_handle_id,title,url,sender_id,send_time,sender_name,read_time,receiver_id,emergency_flag,receiver_dep_name,status,node_id,business_key,node_code,flow_inst_id from gx_fda_supervise.pending_handle where status not like '%网上申请填报%' and receiver_id is not null and pending_module like '%AppFlow%' and send_time >=to_date(?,'yyyy-mm-dd') and pending_handle_id>? order by pending_handle_id
#根据原待办id查询#
supervise.target.fd.findsql=select rm_pending_id from fd_fordo_app where rm_pending_id=?
#插入目标数据库的sql#
supervise.target.fd.insertsql=insert into fd_fordo_app (fordo_id,local_data,status,input_date,rm_pending_id,title,url,sender_id,send_time,sender_name,read_time,recipient_id,emergency_level,sender_dept_name,node_status,node_id,item_apply_id,node_code,flow_inst_id) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
#更新目标数据的sql#
supervise.target.fd.updatesql=update fd_fordo_app set title=?,url=?,sender_id=?,send_time=?,sender_name=?,read_time=?,recipient_id=?,emergency_level=?,sender_dept_name=?,node_status=?,node_id=?,item_apply_id=?,node_code=?,flow_inst_id=?,local_data=? where rm_pending_id=?

####同步审评查验待办####
#获取的时间间隔(单位：天)#
audit.fetch.interval=-90
#获取同步总记录数sql#
audit.fd.countsql=select count(*), max(pending_handle_id) from gx_fda_supervise.pending_handle where status not in ('检查员选派','方案制定', '审查员选派' ,'补正材料' ,'提交现场审查记录' ,'现场检查') and pending_module like '%AuditFlow%' and send_time >=to_date(?,'yyyy-mm-dd')
#获取需要同步的数据 !参数个数及位置要与插入的sql一致!#
audit.fd.datasql=select pending_handle_id,title,url,sender_id,send_time,sender_name,read_time,receiver_id,emergency_flag,receiver_dep_name,status,node_id,business_key,node_code,flow_inst_id from gx_fda_supervise.pending_handle where status not in ('检查员选派','方案制定', '审查员选派' ,'补正材料' ,'提交现场审查记录' ,'现场检查') and pending_module like '%AuditFlow%' and send_time >=to_date(?,'yyyy-mm-dd') and pending_handle_id>? order by pending_handle_id
#根据原待办id查询#
audit.target.fd.findsql=select rm_pending_id from fd_fordo_audit where rm_pending_id=?
#插入目标数据库的sql#
audit.target.fd.insertsql=insert into fd_fordo_audit (rm_pending_id,title,url,sender_id,send_time,sender_name,read_time,recipient_id,emergency_level,sender_dept_name,node_status,node_id,task_id,node_code,flow_inst_id,input_date,local_data,status,fordo_id) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
#更新目标数据的sql#
audit.target.fd.updatesql=update fd_fordo_audit set title=?,url=?,sender_id=?,send_time=?,sender_name=?,read_time=?,recipient_id=?,emergency_level=?,sender_dept_name=?,node_status=?,node_id=?,task_id=?,node_code=?,flow_inst_id=?,local_data=? where rm_pending_id=?